[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "basic_rag"
version = "0.1.0"
description = "Project Basic RAG"
authors = [{name = "Ennio Bastos", email = "ennioferreirab@gmail.com"}]

dependencies = [
"aiohttp==3.9.5",
"aiosignal==1.3.1",
"annotated-types==0.7.0",
"anyio==4.4.0",
"appnope==0.1.4",
"argon2-cffi==23.1.0",
"argon2-cffi-bindings==21.2.0",
"arrow==1.3.0",
"asgiref==3.8.1",
"asttokens==2.4.1",
"async-lru==2.0.4",
"attrs==23.2.0",
"Babel==2.15.0",
"backoff==2.2.1",
"bcrypt==4.1.3",
"beautifulsoup4==4.12.3",
"bleach==6.1.0",
"build==1.2.1",
"cachetools==5.3.3",
"certifi==2024.6.2",
"cffi==1.16.0",
"charset-normalizer==3.3.2",
"chroma-hnswlib==0.7.3",
"chromadb==0.5.0",
"click==8.1.7",
"coloredlogs==15.0.1",
"comm==0.2.2",
"dataclasses-json==0.6.6",
"debugpy==1.8.1",
"decorator==5.1.1",
"defusedxml==0.7.1",
"Deprecated==1.2.14",
"dirtyjson==1.0.8",
"distro==1.9.0",
"dnspython==2.6.1",
"email_validator==2.1.1",
"executing==2.0.1",
"fastapi==0.111.0",
"fastapi-cli==0.0.4",
"fastjsonschema==2.19.1",
"filelock==3.14.0",
"flatbuffers==24.3.25",
"fqdn==1.5.1",
"frozenlist==1.4.1",
"fsspec==2024.6.0",
"google-auth==2.29.0",
"googleapis-common-protos==1.63.1",
"greenlet==3.0.3",
"grpcio==1.64.1",
"h11==0.14.0",
"httpcore==1.0.5",
"httptools==0.6.1",
"httpx==0.27.0",
"huggingface-hub==0.23.2",
"humanfriendly==10.0",
"idna==3.7",
"importlib_metadata==7.1.0",
"importlib_resources==6.4.0",
"ipykernel==6.29.4",
"ipython==8.25.0",
"isoduration==20.11.0",
"jedi==0.19.1",
"Jinja2==3.1.4",
"joblib==1.4.2",
"json5==0.9.25",
"jsonpointer==2.4",
"jsonschema==4.22.0",
"jsonschema-specifications==2023.12.1",
"jupyter-events==0.10.0",
"jupyter-lsp==2.2.5",
"jupyter_client==8.6.2",
"jupyter_core==5.7.2",
"jupyter_server==2.14.1",
"jupyter_server_terminals==0.5.3",
"jupyterlab==4.2.1",
"jupyterlab_pygments==0.3.0",
"jupyterlab_server==2.27.2",
"kubernetes==29.0.0",
"llama-index==0.10.43",
"llama-index-agent-openai==0.2.7",
"llama-index-cli==0.1.12",
"llama-index-core==0.10.43",
"llama-index-embeddings-huggingface==0.2.1",
"llama-index-embeddings-openai==0.1.10",
"llama-index-indices-managed-llama-cloud==0.1.6",
"llama-index-legacy==0.9.48",
"llama-index-llms-openai==0.1.22",
"llama-index-multi-modal-llms-openai==0.1.6",
"llama-index-program-openai==0.1.6",
"llama-index-question-gen-openai==0.1.3",
"llama-index-readers-file==0.1.23",
"llama-index-readers-llama-parse==0.1.4",
"llama-index-retrievers-bm25==0.1.3",
"llama-index-vector-stores-chroma==0.1.8",
"llama-parse==0.4.4",
"llamaindex-py-client==0.1.19",
"markdown-it-py==3.0.0",
"MarkupSafe==2.1.5",
"marshmallow==3.21.2",
"matplotlib-inline==0.1.7",
"mdurl==0.1.2",
"minijinja==2.0.1",
"mistune==3.0.2",
"mmh3==4.1.0",
"monotonic==1.6",
"mpmath==1.3.0",
"multidict==6.0.5",
"mypy-extensions==1.0.0",
"nbclient==0.10.0",
"nbconvert==7.16.4",
"nbformat==5.10.4",
"nest-asyncio==1.6.0",
"networkx==3.3",
"nltk==3.8.1",
"notebook_shim==0.2.4",
"numpy==1.26.4",
"oauthlib==3.2.2",
"onnxruntime==1.18.0",
"openai==1.31.0",
"opentelemetry-api==1.25.0",
"opentelemetry-exporter-otlp-proto-common==1.25.0",
"opentelemetry-exporter-otlp-proto-grpc==1.25.0",
"opentelemetry-instrumentation==0.46b0",
"opentelemetry-instrumentation-asgi==0.46b0",
"opentelemetry-instrumentation-fastapi==0.46b0",
"opentelemetry-proto==1.25.0",
"opentelemetry-sdk==1.25.0",
"opentelemetry-semantic-conventions==0.46b0",
"opentelemetry-util-http==0.46b0",
"orjson==3.10.3",
"overrides==7.7.0",
"packaging==24.0",
"pandas==2.2.2",
"pandocfilters==1.5.1",
"parso==0.8.4",
"pexpect==4.9.0",
"pillow==10.3.0",
"platformdirs==4.2.2",
"posthog==3.5.0",
"prometheus_client==0.20.0",
"prompt_toolkit==3.0.46",
"protobuf==4.25.3",
"psutil==5.9.8",
"ptyprocess==0.7.0",
"pure-eval==0.2.2",
"pyasn1==0.6.0",
"pyasn1_modules==0.4.0",
"pycparser==2.22",
"pydantic==2.7.3",
"pydantic_core==2.18.4",
"Pygments==2.18.0",
"pypdf==4.2.0",
"PyPika==0.48.9",
"pyproject_hooks==1.1.0",
"python-dateutil==2.9.0.post0",
"python-dotenv==1.0.1",
"python-json-logger==2.0.7",
"python-multipart==0.0.9",
"pytz==2024.1",
"PyYAML==6.0.1",
"pyzmq==26.0.3",
"rank-bm25==0.2.2",
"referencing==0.35.1",
"regex==2024.5.15",
"requests==2.32.3",
"requests-oauthlib==2.0.0",
"rfc3339-validator==0.1.4",
"rfc3986-validator==0.1.1",
"rich==13.7.1",
"rpds-py==0.18.1",
"rsa==4.9",
"safetensors==0.4.3",
"scikit-learn==1.5.0",
"scipy==1.13.1",
"Send2Trash==1.8.3",
"sentence-transformers==2.7.0",
"setuptools==70.0.0",
"shellingham==1.5.4",
"six==1.16.0",
"sniffio==1.3.1",
"soupsieve==2.5",
"SQLAlchemy==2.0.30",
"stack-data==0.6.3",
"starlette==0.37.2",
"striprtf==0.0.26",
"sympy==1.12.1",
"tenacity==8.3.0",
"terminado==0.18.1",
"threadpoolctl==3.5.0",
"tiktoken==0.7.0",
"tinycss2==1.3.0",
"tokenizers==0.19.1",
"torch==2.3.0",
"tornado==6.4",
"tqdm==4.66.4",
"traitlets==5.14.3",
"transformers==4.41.2",
"typer==0.12.3",
"types-python-dateutil==2.9.0.20240316",
"typing-inspect==0.9.0",
"typing_extensions==4.12.1",
"tzdata==2024.1",
"ujson==5.10.0",
"uri-template==1.3.0",
"urllib3==2.2.1",
"uvicorn==0.30.1",
"uvloop==0.19.0",
"watchfiles==0.22.0",
"wcwidth==0.2.13",
"webcolors==1.13",
"webencodings==0.5.1",
"websocket-client==1.8.0",
"websockets==12.0",
"wrapt==1.16.0",
"yarl==1.9.4",
"zipp==3.19.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black",
    "ruff",
    "pytype",
    "requests-mock",
    "coverage",
    "pytest-mock",
    "taskipy"
]

[tool.setuptools.packages.find]
where = ["."]

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.coverage.run]
branch = true
source = ["."]
omit = ["./tests/*", "./.venv/*"]

[tool.taskipy.tasks]
pre-commit = """
set -e
rm -rf .pytest .pytype .pytest_cache .coverage 
rm -rf .venv .ruff_cache build dist *ipynb_checkpoints
python -m venv .venv
source .venv/bin/activate
pip install .[dev]
ruff check --statistics .
pytype --exclude=tests/* --exclude=.conda/* --exclude=.venv/* -k .
black . --check
coverage run --source=. -m pytest ./tests/unit
coverage report --fail-under=95
coverage run --source=. -m pytest ./tests/integration
coverage report --fail-under=80
deactivate
rm -rf .pytest .pytype .pytest_cache .coverage autodeployer/shared
rm -rf .venv .ruff_cache build dist *ipynb_checkpoints
"""


[tool.pytype]
inputs = [
    "pytype/*.py",
    "pytype/overlays/",
    "pytype/pyc/",
    "pytype/pyi/",
    "pytype/pytd/",
    "pytype/tools/",
    "pytype/typegraph/",
    "pytype_extensions/**/*.py",
]
exclude = [
    "tests/*",
    ".conda",
    ".pytype*",
    "__pypackages__",
    "venv",
    "*.egg-info",
    ".pytest*"
]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
force-exclude = '''
/(
\.git
| \.mypy_cache
| \.venv
| _build
| build
| dist
| tests
)/
'''


[tool.ruff]
# Ruff - An extremely fast Python linter, written in Rust. - https://beta.ruff.rs
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*ipynb_checkpoints"
]
# Same as Black.
#line-length = 88
# Same as PyCharm.
line-length = 120
# Assume Python 3.8.
target-version = "py38"
[tool.ruff.lint]
# Enable all rules https://beta.ruff.rs/docs/rules/
select = ['A', 'ANN', 'ARG', 'B', 'BLE', 'C', 'C4', 'C90', 'COM', 'D', 'DJ', 'DTZ', 'E', 'EM', 'ERA', 'EXE', 'F', 'FBT', 'G', 'I', 'ICN', 'INP', 'ISC', 'N', 'NPY', 'PD', 'PGH', 'PIE', 'PL', 'PLC', 'PLE', 'PLR', 'PLW', 'PT', 'PTH', 'PYI', 'Q', 'RET', 'RSE', 'RUF', 'S', 'SIM', 'SLF', 'T10', 'T20', 'TCH', 'TID', 'TRY', 'UP', 'W', 'YTT']
#select = ['D']
# Rules to ignore:
# COM flake8-commas is no longer maintained, and now black or https://github.com/asottile/add-trailing-comma is recommended instead
# PLR0913 Too many arguments to function call (6 > 5)
# G003 Logging statement uses `+`
# G004 Logging statement uses f-string
# S324 Probable use of insecure hash functions in `hashlib`: `sha1`
# ANN101 Missing type annotation for `self` in method
ignore = ["COM","PLR0913", "G003", "G004", "S324", "ANN101"]
# Allow autofix for all enabled rules (when `--fix`) is provided.
#fixable = ["A", "B", "C", "D", "E", "F", "I"]
fixable = ['A', 'ANN', 'ARG', 'B', 'BLE', 'C', 'C4', 'C90', 'COM', 'D', 'DJ', 'DTZ', 'E', 'EM', 'ERA', 'EXE', 'F', 'FBT', 'G', 'I', 'ICN', 'INP', 'ISC', 'N', 'NPY', 'PD', 'PGH', 'PIE', 'PL', 'PLC', 'PLE', 'PLR', 'PLW', 'PT', 'PTH', 'PYI', 'Q', 'RET', 'RSE', 'RUF', 'S', 'SIM', 'SLF', 'T10', 'T20', 'TCH', 'TID', 'TRY', 'UP', 'W', 'YTT']
# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
[tool.ruff.lint.pydocstyle]
# Google DocString Convention
convention = "google"